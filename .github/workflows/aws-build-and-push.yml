name: Deploy to ECR - EKS

on:
  push:
    branches:
    - main

permissions:
  id-token: write
  contents: read
  
jobs:
  
  build:
    
    name: Prod Test and Deploy
    runs-on: ubuntu-latest

    steps:

    - name: Check out code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        
    - name: Set env
      run: echo "COMMIT_COUNT_TAG=$(git rev-list HEAD | wc -l | sed 's/^ *//g')" >> $GITHUB_ENV
    - name: Set repo env
      run: echo "REPO_NAME=${{ github.event.repository.name }}" >> $GITHUB_ENV
    
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: us-east-1
        role-to-assume: arn:aws:iam::348788495056:role/github-action-role
        role-session-name:  ${{ env.REPO_NAME }}-GitHubAction-session

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Create ECR repo if it's missed
      uses: int128/create-ecr-repository-action@v1
      with:
        repository: conductor-server-oss

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ env.COMMIT_COUNT_TAG }}
        REPO_NAME: conductor-server-oss
      run: |
        docker build --no-cache -t $ECR_REGISTRY/${{ env.REPO_NAME }}:1.0.$IMAGE_TAG -f docker/server/Dockerfile  .
        docker push $ECR_REGISTRY/${{ env.REPO_NAME }}:1.0.$IMAGE_TAG
